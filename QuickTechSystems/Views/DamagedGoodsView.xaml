<!-- Path: QuickTechSystems.WPF.Views/DamagedGoodsView.xaml -->
<UserControl x:Class="QuickTechSystems.WPF.Views.DamagedGoodsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:QuickTechSystems.WPF.Views"
             mc:Ignorable="d"
             x:Name="DamagedGoodsViewRoot">

    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

        <!-- Add the missing DataGrid styles directly in this file -->
        <Style x:Key="ResponsiveDataGrid" TargetType="DataGrid">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="RowBackground" Value="Transparent"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="CanUserDeleteRows" Value="False"/>
            <Setter Property="CanUserReorderColumns" Value="True"/>
            <Setter Property="CanUserResizeRows" Value="False"/>
            <Setter Property="GridLinesVisibility" Value="Horizontal"/>
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="RowHeight" Value="40"/>
            <Setter Property="SelectionMode" Value="Single"/>
            <Setter Property="SelectionUnit" Value="FullRow"/>
            <Setter Property="Margin" Value="0"/>
        </Style>

        <Style x:Key="ModernDataGridColumnHeader" TargetType="DataGridColumnHeader">
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Padding" Value="10,8"/>
            <Setter Property="BorderThickness" Value="0,0,0,1"/>
            <Setter Property="Height" Value="45"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>

        <Style x:Key="ModernDataGridCell" TargetType="DataGridCell">
            <Setter Property="Padding" Value="10,4"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DataGridCell">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="LightBlue"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Add the missing button style -->
        <Style x:Key="DangerTextButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="Red"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="8,4"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" 
                                              VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#FFEEEE"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#FFDDDD"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Add other potentially missing styles to prevent further errors -->
        <Style x:Key="TextButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="Blue"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="8,4"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" 
                                              VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#EEEEFF"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#DDDDFF"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="PrimaryButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#007BFF"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="16,8"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" 
                                              VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#0069D9"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#0062CC"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SuccessButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#28A745"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="16,8"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" 
                                              VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#218838"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#1E7E34"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Layout styles -->
        <Style x:Key="ResponsiveTwoColumnLayout" TargetType="Grid">
            <Setter Property="Margin" Value="24"/>
        </Style>

        <Style x:Key="EnhancedResponsiveCardContainer" TargetType="Border">
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="#DDDDDD"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="CornerRadius" Value="4"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect BlurRadius="10" ShadowDepth="1" Opacity="0.1"/>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="DataTableContainer" TargetType="Border">
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="#DDDDDD"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="CornerRadius" Value="4"/>
            <Setter Property="Padding" Value="0"/>
        </Style>

        <Style x:Key="LoadingOverlay" TargetType="Border">
            <Setter Property="Background" Value="#80000000"/>
            <Setter Property="Visibility" Value="Collapsed"/>
        </Style>

        <!-- Common text styles -->
        <Style x:Key="DisplaySmall" TargetType="TextBlock">
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
        </Style>

        <Style x:Key="HeadlineMedium" TargetType="TextBlock">
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
        </Style>

        <Style x:Key="HeadlineSmall" TargetType="TextBlock">
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
        </Style>

        <Style x:Key="BodyLarge" TargetType="TextBlock">
            <Setter Property="FontSize" Value="16"/>
        </Style>

        <Style x:Key="BodyMedium" TargetType="TextBlock">
            <Setter Property="FontSize" Value="14"/>
        </Style>

        <Style x:Key="BodySmall" TargetType="TextBlock">
            <Setter Property="FontSize" Value="12"/>
        </Style>

        <!-- Common colors -->
        <SolidColorBrush x:Key="PrimaryColor" Color="#007BFF"/>
        <SolidColorBrush x:Key="DangerColor" Color="#DC3545"/>
        <SolidColorBrush x:Key="TextPrimaryColor" Color="#212529"/>
        <SolidColorBrush x:Key="TextSecondaryColor" Color="#6C757D"/>
        <SolidColorBrush x:Key="BorderColor" Color="#DDDDDD"/>
        <SolidColorBrush x:Key="SurfaceVariantColor" Color="#F8F9FA"/>
        <SolidColorBrush x:Key="PrimaryLightColor" Color="#E6F2FF"/>

        <!-- Progress bar style -->
        <Style x:Key="ModernProgressBar" TargetType="ProgressBar">
            <Setter Property="Background" Value="#E9ECEF"/>
            <Setter Property="Foreground" Value="#007BFF"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Height" Value="4"/>
        </Style>
    </UserControl.Resources>

    <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
        <Grid x:Name="ContentGrid" Style="{StaticResource ResponsiveTwoColumnLayout}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="350"/>
            </Grid.ColumnDefinitions>

            <!-- Damaged Goods List -->
            <Grid Grid.Column="0" Margin="0,0,24,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <TextBlock Grid.Row="0" 
                           Text="{DynamicResource DamagedGoods_Title}"
                           Style="{StaticResource DisplaySmall}" 
                           Foreground="{StaticResource PrimaryColor}"
                           Margin="0,0,0,16"/>

                <!-- Date Range Filter -->
                <Border Grid.Row="1" 
                        Style="{StaticResource EnhancedResponsiveCardContainer}"
                        Padding="16" 
                        Margin="0,0,0,16">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Column="0" 
                                   Text="{DynamicResource Profit_DateFrom}" 
                                   VerticalAlignment="Center" 
                                   Margin="0,0,8,0" 
                                   Foreground="{StaticResource TextPrimaryColor}"/>

                        <DatePicker Grid.Column="1" 
                                    SelectedDate="{Binding StartDate}" 
                                    Width="120" 
                                    Margin="0,0,16,0"
                                    VerticalAlignment="Center"/>

                        <TextBlock Grid.Column="2" 
                                   Text="{DynamicResource Profit_DateTo}" 
                                   VerticalAlignment="Center" 
                                   Margin="0,0,8,0" 
                                   Foreground="{StaticResource TextPrimaryColor}"/>

                        <DatePicker Grid.Column="3" 
                                    SelectedDate="{Binding EndDate}" 
                                    Width="120" 
                                    Margin="0,0,16,0"
                                    VerticalAlignment="Center"/>

                        <Button Grid.Column="5" 
                                Content="{DynamicResource General_Refresh}" 
                                Command="{Binding RefreshCommand}" 
                                Style="{StaticResource PrimaryButtonStyle}"
                                Width="100"/>
                    </Grid>
                </Border>

                <!-- Damaged Goods DataGrid -->
                <Border Grid.Row="2" Style="{StaticResource DataTableContainer}">
                    <DataGrid ItemsSource="{Binding DamagedGoods}"
                              SelectedItem="{Binding SelectedDamagedItem}"
                              Style="{StaticResource ResponsiveDataGrid}"
                              ColumnHeaderStyle="{StaticResource ModernDataGridColumnHeader}"
                              CellStyle="{StaticResource ModernDataGridCell}"
                              AutoGenerateColumns="False"
                              IsReadOnly="True"
                              IsEnabled="{Binding IsNotProcessing}"
                              BorderThickness="0"
                              MouseDoubleClick="DataGrid_MouseDoubleClick">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="{DynamicResource Transaction_Date}" 
                                              Binding="{Binding DateRegistered, StringFormat='{}{0:MM/dd/yyyy HH:mm}'}"
                                              Width="140"/>
                            <DataGridTextColumn Header="{DynamicResource Product_Barcode}" 
                                              Binding="{Binding Barcode}"
                                              Width="120"/>
                            <DataGridTextColumn Header="{DynamicResource DamagedGoods_Product}" 
                                              Binding="{Binding ProductName}"
                                              Width="*"/>
                            <DataGridTextColumn Header="{DynamicResource Product_Category}" 
                                              Binding="{Binding CategoryName}"
                                              Width="120"/>
                            <DataGridTextColumn Header="{DynamicResource Transaction_Column_Quantity}" 
                                              Binding="{Binding Quantity}"
                                              Width="80"/>
                            <DataGridTextColumn Header="{DynamicResource DamagedGoods_LossAmount}" 
                                              Binding="{Binding LossAmount, StringFormat=C}"
                                              Width="100"/>
                            <DataGridTextColumn Header="{DynamicResource DamagedGoods_Reason}" 
                                              Binding="{Binding Reason}"
                                              Width="250"/>
                            <DataGridTemplateColumn Width="120">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <Button Content="{DynamicResource General_Edit}"
                                                    Command="{Binding DataContext.EditDamagedItemCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                                    CommandParameter="{Binding}"
                                                    Style="{StaticResource TextButtonStyle}"
                                                    Margin="0,0,8,0"/>
                                            <Button Content="{DynamicResource Customer_Delete}"
                                                    Command="{Binding DataContext.DeleteDamagedItemCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                                    CommandParameter="{Binding}"
                                                    Style="{StaticResource DangerTextButtonStyle}"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </Border>
            </Grid>

            <!-- Summary and Actions -->
            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <!-- Add Button -->
                <Button Grid.Row="0" 
                        Content="{DynamicResource DamagedGoods_RegisterDamagedGoods}" 
                        Command="{Binding OpenAddDamagedItemCommand}"
                        Style="{StaticResource SuccessButtonStyle}" 
                        Margin="0,0,0,16"
                        HorizontalAlignment="Left"/>

                <!-- Total Loss Summary -->
                <Border Grid.Row="1" 
                        Style="{StaticResource EnhancedResponsiveCardContainer}"
                        Margin="0,0,0,16">
                    <Grid Margin="16">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <TextBlock Grid.Row="0" 
                                  Text="{DynamicResource DamagedGoods_TotalLossSummary}" 
                                  Style="{StaticResource HeadlineMedium}"
                                  Margin="0,0,0,16"/>

                        <StackPanel Grid.Row="1">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock Grid.Column="0" 
                                          Text="{DynamicResource DamagedGoods_TotalLossAmount}" 
                                          Style="{StaticResource BodyLarge}"
                                          Foreground="{StaticResource TextPrimaryColor}"/>

                                <TextBlock Grid.Column="1" 
                                          Text="{Binding TotalLoss, StringFormat=C}" 
                                          Style="{StaticResource HeadlineSmall}"
                                          Foreground="{StaticResource DangerColor}"/>
                            </Grid>

                            <TextBlock Text="{DynamicResource DamagedGoods_ForSelectedDateRange}" 
                                      Style="{StaticResource BodySmall}"
                                      Foreground="{StaticResource TextSecondaryColor}"
                                      Margin="0,8,0,0"/>
                        </StackPanel>
                    </Grid>
                </Border>
            </Grid>

            <!-- Loading Overlay -->
            <Border Grid.ColumnSpan="2"
                   Style="{StaticResource LoadingOverlay}" 
                   Visibility="{Binding IsProcessing, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Border Background="White"
                        CornerRadius="4"
                        Padding="20"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center">
                    <StackPanel>
                        <ProgressBar Style="{StaticResource ModernProgressBar}"
                                     IsIndeterminate="True"
                                     Width="200"
                                     Height="2"
                                     Margin="0,0,0,10"/>
                        <TextBlock Text="{Binding StatusMessage}"
                                  Style="{StaticResource BodyMedium}"
                                  HorizontalAlignment="Center"/>
                    </StackPanel>
                </Border>
            </Border>

            <!-- Damaged Goods Popup -->
            <Popup IsOpen="{Binding IsDamagedItemPopupOpen, Mode=TwoWay}"
                   StaysOpen="True"
                   AllowsTransparency="True"
                   PlacementTarget="{Binding ElementName=DamagedGoodsViewRoot}"
                   Placement="Center"
                   PopupAnimation="Fade"
                   Focusable="True"
                   Width="{Binding ActualWidth, ElementName=DamagedGoodsViewRoot}"
                   Height="{Binding ActualHeight, ElementName=DamagedGoodsViewRoot}">
                <local:DamagedGoodsPopup DataContext="{Binding}"/>
            </Popup>

            <!-- Product Search Popup -->
            <Popup IsOpen="{Binding IsProductSearchPopupOpen, Mode=TwoWay}"
                   StaysOpen="True"
                   AllowsTransparency="True"
                   PlacementTarget="{Binding ElementName=DamagedGoodsViewRoot}"
                   Placement="Center"
                   PopupAnimation="Fade"
                   Focusable="True"
                   Width="{Binding ActualWidth, ElementName=DamagedGoodsViewRoot}"
                   Height="{Binding ActualHeight, ElementName=DamagedGoodsViewRoot}">
                <local:DamagedGoodsProductSearch DataContext="{Binding}"/>
            </Popup>
        </Grid>
    </ScrollViewer>
</UserControl>