<Window x:Class="QuickTechSystems.WPF.Views.ProductDetailsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:local="clr-namespace:QuickTechSystems.WPF.Views"
        mc:Ignorable="d"
        Title="Product Details"
        Height="650" Width="1100"
        WindowStartupLocation="CenterOwner"
        WindowStyle="None"
        ResizeMode="NoResize"
        Background="White"
        BorderThickness="1"
        BorderBrush="#DDDDDD">

    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

        <!-- Text Input Field Style -->
        <Style x:Key="TextInputStyle" TargetType="TextBox">
            <Setter Property="Height" Value="36"/>
            <Setter Property="Padding" Value="10,0"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="BorderBrush" Value="#DDDDDD"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border x:Name="border" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" 
                                CornerRadius="3">
                            <ScrollViewer x:Name="PART_ContentHost" 
                                         Focusable="False" 
                                         HorizontalScrollBarVisibility="Hidden" 
                                         VerticalScrollBarVisibility="Hidden"
                                         Padding="{TemplateBinding Padding}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="#007BFF"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ComboBox Style -->
        <Style x:Key="ComboBoxStyle" TargetType="ComboBox">
            <Setter Property="Height" Value="36"/>
            <Setter Property="Padding" Value="8,0"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="BorderBrush" Value="#DDDDDD"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Background" Value="White"/>
        </Style>

        <!-- Add Button Style -->
        <Style x:Key="AddButtonStyle" TargetType="Button">
            <Setter Property="Width" Value="32"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="Background" Value="#4CAF50"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                               BorderThickness="0"
                               CornerRadius="3">
                            <ContentPresenter HorizontalAlignment="Center" 
                                            VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#388E3C"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#2E7D32"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Primary Button Style (Blue) -->
        <Style x:Key="PrimaryButtonStyle" TargetType="Button">
            <Setter Property="Height" Value="36"/>
            <Setter Property="Padding" Value="16,0"/>
            <Setter Property="Background" Value="#007BFF"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                               BorderThickness="0"
                               CornerRadius="3">
                            <ContentPresenter HorizontalAlignment="Center" 
                                            VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#0069D9"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#0062CC"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Secondary Button Style (Gray) -->
        <Style x:Key="SecondaryButtonStyle" TargetType="Button">
            <Setter Property="Height" Value="36"/>
            <Setter Property="Padding" Value="16,0"/>
            <Setter Property="Background" Value="#6C757D"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                               BorderThickness="0"
                               CornerRadius="3">
                            <ContentPresenter HorizontalAlignment="Center" 
                                            VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#5A6268"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#545B62"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Success Button Style (Green) -->
        <Style x:Key="SuccessButtonStyle" TargetType="Button">
            <Setter Property="Height" Value="36"/>
            <Setter Property="Padding" Value="16,0"/>
            <Setter Property="Background" Value="#4CAF50"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                               BorderThickness="0"
                               CornerRadius="3">
                            <ContentPresenter HorizontalAlignment="Center" 
                                            VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#3D8B40"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#2E7D32"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Danger Button Style (Red) -->
        <Style x:Key="DangerButtonStyle" TargetType="Button">
            <Setter Property="Height" Value="36"/>
            <Setter Property="Padding" Value="16,0"/>
            <Setter Property="Background" Value="#DC3545"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                               BorderThickness="0"
                               CornerRadius="3">
                            <ContentPresenter HorizontalAlignment="Center" 
                                            VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#C82333"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#BD2130"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Section Style -->
        <Style x:Key="SectionStyle" TargetType="Border">
            <Setter Property="Background" Value="#FFFFFF"/>
            <Setter Property="BorderBrush" Value="#E0E0E0"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="CornerRadius" Value="5"/>
            <Setter Property="Padding" Value="15"/>
            <Setter Property="Margin" Value="0,0,0,15"/>
        </Style>

        <!-- Section Title Style -->
        <Style x:Key="SectionTitleStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Foreground" Value="#007BFF"/>
            <Setter Property="Margin" Value="0,0,0,15"/>
        </Style>

        <!-- Field Label Style -->
        <Style x:Key="FieldLabelStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Foreground" Value="#333333"/>
            <Setter Property="Margin" Value="0,0,0,5"/>
        </Style>

        <!-- Helper Text Style -->
        <Style x:Key="HelperTextStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Foreground" Value="#666666"/>
            <Setter Property="Margin" Value="0,3,0,8"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>
    </Window.Resources>

    <Grid Margin="0,0,0,-2">
        <!-- Header -->
        <Border Height="50" VerticalAlignment="Top" Background="White" BorderThickness="0,0,0,1" BorderBrush="#DDDDDD" MouseDown="Border_MouseDown">
            <Grid>
                <TextBlock Text="Product Details" 
                          FontSize="18" 
                          FontWeight="SemiBold" 
                          VerticalAlignment="Center" 
                          Margin="20,0,0,0"/>
                <Button Content="✕" 
                        Click="CloseButton_Click"
                        Width="30" 
                        Height="30"
                        Background="Transparent"
                        BorderThickness="0"
                        FontSize="16"
                        Foreground="#666666"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        Margin="0,0,15,0"
                        Cursor="Hand"/>
            </Grid>
        </Border>

        <!-- Main Content -->
        <ScrollViewer Margin="0,50,0,92" VerticalScrollBarVisibility="Auto">
            <Grid Margin="20">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="15"/>
                    <!-- Spacer -->
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="15"/>
                    <!-- Spacer -->
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <!-- Left Column -->
                <StackPanel Grid.Column="0">
                    <!-- Basic Information -->
                    <Border Style="{StaticResource SectionStyle}">
                        <StackPanel>
                            <TextBlock Text="Basic Information" Style="{StaticResource SectionTitleStyle}"/>

                            <!-- Name Field -->
                            <TextBlock Text="Name *" Style="{StaticResource FieldLabelStyle}"/>
                            <TextBox Text="{Binding SelectedProduct.Name, UpdateSourceTrigger=PropertyChanged}" 
                                    Style="{StaticResource TextInputStyle}" 
                                    Margin="0,0,0,15"/>

                            <!-- Category Field -->
                            <TextBlock Text="Category *" Style="{StaticResource FieldLabelStyle}"/>
                            <Grid Margin="0,0,0,15">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <ComboBox Grid.Column="0" 
                                        ItemsSource="{Binding Categories}"
                                        DisplayMemberPath="Name"
                                        SelectedValuePath="CategoryId"
                                        SelectedValue="{Binding SelectedProduct.CategoryId}"
                                        Style="{StaticResource ComboBoxStyle}"/>
                                <Button Grid.Column="1" 
                                        Content="+" 
                                        Click="AddCategoryButton_Click"
                                        Style="{StaticResource AddButtonStyle}"
                                        Margin="5,0,0,0"/>
                            </Grid>

                            <!-- Supplier Field -->
                            <TextBlock Text="Supplier" Style="{StaticResource FieldLabelStyle}"/>
                            <Grid Margin="0,0,0,15">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <ComboBox Grid.Column="0" 
                                        ItemsSource="{Binding Suppliers}"
                                        DisplayMemberPath="Name"
                                        SelectedValuePath="SupplierId"
                                        SelectedValue="{Binding SelectedProduct.SupplierId}"
                                        Style="{StaticResource ComboBoxStyle}"/>
                                <Button Grid.Column="1" 
                                        Content="+" 
                                        Click="AddSupplierButton_Click"
                                        Style="{StaticResource AddButtonStyle}"
                                        Margin="5,0,0,0"/>
                            </Grid>

                            <!-- Is Active Checkbox -->
                            <CheckBox Content="Is Active" 
                                    IsChecked="{Binding SelectedProduct.IsActive}" 
                                    Margin="0,5,0,0"
                                    VerticalContentAlignment="Center"/>
                        </StackPanel>
                    </Border>
                </StackPanel>

                <!-- Middle Column -->
                <StackPanel Grid.Column="2">
                    <!-- Stock Information -->
                    <Border Style="{StaticResource SectionStyle}">
                        <StackPanel>
                            <TextBlock Text="Stock Information" Style="{StaticResource SectionTitleStyle}"/>

                            <!-- Current Stock Field -->
                            <TextBlock Text="Current Stock" Style="{StaticResource FieldLabelStyle}"/>
                            <TextBox Text="{Binding SelectedProduct.CurrentStock, UpdateSourceTrigger=PropertyChanged}" 
                                    Style="{StaticResource TextInputStyle}" 
                                    Tag="integer"
                                    PreviewTextInput="IntegerTextBox_PreviewTextInput"
                                    DataObject.Pasting="NumericTextBox_Pasting"
                                    Margin="0,0,0,15"/>

                            <!-- Minimum Stock Field -->
                            <TextBlock Text="Minimum Stock" Style="{StaticResource FieldLabelStyle}"/>
                            <TextBox Text="{Binding SelectedProduct.MinimumStock, UpdateSourceTrigger=PropertyChanged}" 
                                    Style="{StaticResource TextInputStyle}" 
                                    Tag="integer"
                                    PreviewTextInput="IntegerTextBox_PreviewTextInput"
                                    DataObject.Pasting="NumericTextBox_Pasting"
                                    Margin="0,0,0,0"/>
                        </StackPanel>
                    </Border>

                    <!-- Price Information -->
                    <Border Style="{StaticResource SectionStyle}">
                        <StackPanel>
                            <TextBlock Text="Price Information" Style="{StaticResource SectionTitleStyle}"/>

                            <!-- Purchase Price Field -->
                            <TextBlock Text="Purchase Price" Style="{StaticResource FieldLabelStyle}"/>
                            <TextBox Text="{Binding SelectedProduct.PurchasePrice, StringFormat=N2, UpdateSourceTrigger=PropertyChanged}" 
                                    Style="{StaticResource TextInputStyle}" 
                                    Tag="decimal"
                                    PreviewTextInput="DecimalTextBox_PreviewTextInput"
                                    DataObject.Pasting="NumericTextBox_Pasting"
                                    GotFocus="PriceTextBox_GotFocus"
                                    LostFocus="PriceTextBox_LostFocus"
                                    Margin="0,0,0,15"/>

                            <!-- Sale Price Field -->
                            <TextBlock Text="Sale Price" Style="{StaticResource FieldLabelStyle}"/>
                            <TextBox Text="{Binding SelectedProduct.SalePrice, StringFormat=N2, UpdateSourceTrigger=PropertyChanged}" 
                                    Style="{StaticResource TextInputStyle}" 
                                    Tag="decimal"
                                    PreviewTextInput="DecimalTextBox_PreviewTextInput"
                                    DataObject.Pasting="NumericTextBox_Pasting"
                                    GotFocus="PriceTextBox_GotFocus"
                                    LostFocus="PriceTextBox_LostFocus"
                                    Margin="0,0,0,0"/>
                        </StackPanel>
                    </Border>
                </StackPanel>

                <!-- Right Column -->
                <StackPanel Grid.Column="4">
                    <!-- Barcode Information -->
                    <Border Style="{StaticResource SectionStyle}">
                        <StackPanel>
                            <TextBlock Text="Barcode Information" Style="{StaticResource SectionTitleStyle}"/>

                            <!-- Option 1: Use Existing Barcode -->
                            <TextBlock Text="Option 1: Use Existing Barcode" 
                                       FontWeight="SemiBold" 
                                       Margin="0,0,0,5"/>
                            <TextBlock Text="Enter an existing barcode and generate its image" 
                                       Style="{StaticResource HelperTextStyle}"/>

                            <!-- Barcode Field -->
                            <TextBlock Text="Barcode" Style="{StaticResource FieldLabelStyle}"/>
                            <TextBox Text="{Binding SelectedProduct.Barcode, UpdateSourceTrigger=PropertyChanged}" 
                                    Style="{StaticResource TextInputStyle}" 
                                    Margin="0,0,0,8"/>

                            <!-- Generate Barcode from Input Button -->
                            <Button Content="Generate Image from Barcode"
                                    Command="{Binding GenerateBarcodeCommand}"
                                    Style="{StaticResource PrimaryButtonStyle}"
                                    HorizontalAlignment="Stretch"
                                    Margin="0,0,0,15"/>

                            <!-- Option 2: Auto-Generate Barcode -->
                            <TextBlock Text="Option 2: Auto-Generate New Barcode" 
                                       FontWeight="SemiBold" 
                                       Margin="0,0,0,5"/>
                            <TextBlock Text="Create a new unique barcode automatically" 
                                       Style="{StaticResource HelperTextStyle}"/>

                            <!-- Auto-Generate Barcode Button -->
                            <Button Content="Auto-Generate New Barcode"
                                    Command="{Binding GenerateAutomaticBarcodeCommand}"
                                    Style="{StaticResource SecondaryButtonStyle}"
                                    HorizontalAlignment="Stretch"
                                    Margin="0,0,0,15"/>

                            <!-- Barcode Image Display -->
                            <TextBlock Text="Barcode Image Preview" 
                                       Style="{StaticResource FieldLabelStyle}"/>
                            <Border BorderBrush="#DDDDDD"
                                    BorderThickness="1"
                                    Padding="10"
                                    Background="#F8F9FA">
                                <Image Source="{Binding BarcodeImage}"
                                       Height="60"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Top"
                                       Stretch="Uniform"
                                       RenderOptions.BitmapScalingMode="HighQuality"
                                       Margin="0,0,0,0"/>
                            </Border>
                        </StackPanel>
                    </Border>

                    <!-- Product Image -->
                    <Border Style="{StaticResource SectionStyle}">
                        <StackPanel>
                            <TextBlock Text="Image" Style="{StaticResource SectionTitleStyle}"/>

                            <!-- Image Upload/Clear Buttons -->
                            <Grid Margin="0,0,0,15">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Button Grid.Column="0"
                                        Content="Upload Image"
                                        Command="{Binding UploadImageCommand}"
                                        Style="{StaticResource PrimaryButtonStyle}"
                                        Margin="0,0,5,0"/>
                                <Button Grid.Column="1"
                                        Content="Clear Image"
                                        Command="{Binding ClearImageCommand}"
                                        Style="{StaticResource SecondaryButtonStyle}"
                                        Margin="5,0,0,0"/>
                            </Grid>

                            <!-- Image Display Area -->
                            <Border BorderBrush="#DDDDDD"
                                    BorderThickness="1"
                                    Height="180"
                                    HorizontalAlignment="Stretch"
                                    Background="#F8F9FA">
                                <Image Source="{Binding ProductImage}"
       Stretch="Uniform"
       RenderOptions.BitmapScalingMode="HighQuality"
       Margin="5"/>
                            </Border>
                        </StackPanel>
                    </Border>
                </StackPanel>
            </Grid>
        </ScrollViewer>

        <!-- Footer with Buttons -->
        <Border Height="60" VerticalAlignment="Bottom" Background="White" BorderThickness="0,1,0,0" BorderBrush="#DDDDDD">
            <Grid>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,20,0">
                    <Button Content="Delete"
                            Command="{Binding DeleteCommand}"
                            Click="DeleteButton_Click"
                            Style="{StaticResource DangerButtonStyle}"
                            Width="100"
                            Margin="0,0,10,0"
                            Visibility="{Binding IsNewProduct, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=Inverse}"/>
                    <Button Content="Save"
                            Command="{Binding SaveCommand}"
                            Click="SaveButton_Click"
                            Style="{StaticResource SuccessButtonStyle}"
                            Width="100"/>
                </StackPanel>
            </Grid>
        </Border>
    </Grid>
</Window>