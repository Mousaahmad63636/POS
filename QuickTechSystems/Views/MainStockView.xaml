<UserControl x:Class="QuickTechSystems.WPF.Views.MainStockView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:QuickTechSystems.WPF.Views"
             xmlns:converters="clr-namespace:QuickTechSystems.WPF.Converters"
             mc:Ignorable="d"
             x:Name="MainStockViewRoot">
    <UserControl.Resources>
        <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
            <Setter Property="Margin" Value="4 2"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="Padding" Value="8 4"/>
            <Setter Property="Margin" Value="4 2"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>

        <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Padding" Value="12 4"/>
            <Setter Property="Margin" Value="4 2"/>
            <Setter Property="MinWidth" Value="80"/>
        </Style>

        <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
            <Setter Property="Margin" Value="4 2"/>
            <Setter Property="Padding" Value="4 2"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>

        <!-- Converters (existing ones preserved) -->
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <converters:ByteArrayToImageSourceConverter x:Key="ByteArrayToImageConverter"/>
        <converters:BoolToColorConverter x:Key="BoolToColorConverter"/>
        <converters:BoolToTextConverter x:Key="BoolToTextConverter"/>
        <converters:StringToVisibilityConverter x:Key="StringToVisibilityConverter"/>
        <converters:FilePathToImageConverter x:Key="FilePathToImageConverter"/>
        <converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>
        <converters:StockToBoxesConverter x:Key="StockToBoxesConverter"/>
        <converters:MultiValueStockToBoxesConverter x:Key="MultiValueStockToBoxesConverter"/>
    </UserControl.Resources>

    <Grid x:Name="ContentGrid" Margin="16">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Header Section -->
        <Border Grid.Row="0" Padding="8" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                CornerRadius="4" Margin="0 0 0 12">
            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                <!-- Search Group -->
                <GroupBox Header="Search" Margin="0 0 12 0">
                    <Grid Width="200">
                        <TextBox Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}"
                                 Tag="Search inventory..."/>
                        <TextBlock Text="Search inventory..." Foreground="Gray" Margin="8 0 0 0"
                                   IsHitTestVisible="False" Visibility="{Binding SearchText, Converter={StaticResource StringToVisibilityConverter}, ConverterParameter=Inverse}"/>
                    </Grid>
                </GroupBox>

                <!-- Stock Management Group -->
                <GroupBox Header="Stock Actions" Margin="0 0 12 0">
                    <StackPanel Orientation="Horizontal">
                        <TextBox Width="60" Text="{Binding StockIncrement}" Margin="0 0 8 0"/>
                        <Button Content="Add Stock" Command="{Binding UpdateStockCommand}"/>
                    </StackPanel>
                </GroupBox>

                <!-- Transfer Actions -->
                <StackPanel Orientation="Vertical" Margin="0 0 12 0">
                    <Button Content="Transfer to Store" Command="{Binding TransferToStoreCommand}"
                            Margin="0 2" Padding="8 4"/>
                    <Button Content="Box to Individual" Command="{Binding BoxToIndividualCommand}"
                            Margin="0 2" Padding="8 4"/>
                </StackPanel>

                <!-- Global Actions -->
                <GroupBox Header="Actions" Margin="0 0 12 0">
                    <StackPanel Orientation="Horizontal">
                        <Button Content="Refresh" Command="{Binding LoadCommand}"/>
                        <Button Content="Add New" Command="{Binding AddCommand}"/>
                        <Button Content="Bulk Add" Command="{Binding BulkAddCommand}"/>
                        <Button Content="Generate Barcodes" Command="{Binding GenerateMissingBarcodesCommand}"/>
                    </StackPanel>
                </GroupBox>

                <!-- Auto-sync Checkbox -->
                <CheckBox Content="Auto-sync Products" IsChecked="{Binding AutoSyncToProducts}"
                          VerticalAlignment="Center" Margin="12 0 0 0"/>
            </StackPanel>
        </Border>

        <!-- Main DataGrid -->
        <DataGrid Grid.Row="1" ItemsSource="{Binding Items}" SelectedItem="{Binding SelectedItem}"
                  AutoGenerateColumns="False" IsReadOnly="True" IsEnabled="{Binding IsNotSaving}"
                  HeadersVisibility="Column" RowHeight="40" FontSize="14" GridLinesVisibility="None"
                  HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto"
                  MouseDoubleClick="DataGrid_MouseDoubleClick">

            <DataGrid.Columns>
                <!-- Image Column -->
                <DataGridTemplateColumn Header="Image" Width="60">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Border Width="40" Height="40" Background="WhiteSmoke" CornerRadius="4"
                                    BorderThickness="1" BorderBrush="#DDDDDD">
                                <Image Source="{Binding ImagePath, Converter={StaticResource FilePathToImageConverter}, ConverterParameter=40}"
                                       Stretch="Uniform"/>
                            </Border>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!-- Barcode Columns -->
                <DataGridTextColumn Header="Item Barcode" Binding="{Binding Barcode}" Width="120"/>
                <DataGridTextColumn Header="Box Barcode" Binding="{Binding BoxBarcode}" Width="120"/>

                <!-- Product Info Columns -->
                <DataGridTextColumn Header="Name" Binding="{Binding Name}" Width="*" MinWidth="200"/>
                <DataGridTextColumn Header="Category" Binding="{Binding CategoryName}" Width="140"/>

                <!-- Stock Columns -->
                <DataGridTextColumn Header="Items/Box" Binding="{Binding ItemsPerBox}" Width="80"/>
                <DataGridTextColumn Header="Boxes" Binding="{Binding NumberOfBoxes}" Width="70"/>
                <DataGridTextColumn Header="Total Stock" Binding="{Binding CurrentStock}" Width="90"/>

                <!-- Pricing Columns -->
                <DataGridTextColumn Header="Box Purchase" Binding="{Binding BoxPurchasePrice, StringFormat=C2}" Width="110"/>
                <DataGridTextColumn Header="Box Wholesale" Binding="{Binding BoxWholesalePrice, StringFormat=C2}" Width="110"/>
                <DataGridTextColumn Header="Box Sale" Binding="{Binding BoxSalePrice, StringFormat=C2}" Width="110"/>
                <DataGridTextColumn Header="Item Purchase" Binding="{Binding PurchasePrice, StringFormat=C2}" Width="110"/>
                <DataGridTextColumn Header="Item Wholesale" Binding="{Binding WholesalePrice, StringFormat=C2}" Width="110"/>
                <DataGridTextColumn Header="Item Sale" Binding="{Binding SalePrice, StringFormat=C2}" Width="110"/>

                <!-- Status Column -->
                <DataGridTemplateColumn Header="Status" Width="90">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Border CornerRadius="3" Padding="4 2" Background="{Binding IsActive, Converter={StaticResource BoolToColorConverter}, ConverterParameter='Green|LightGray'}">
                                <TextBlock Text="{Binding IsActive, Converter={StaticResource BoolToTextConverter}, ConverterParameter='Active|Inactive'}"
                                           HorizontalAlignment="Center" Foreground="White"/>
                            </Border>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!-- Edit Column -->
                <DataGridTemplateColumn Header="Actions" Width="100">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Content="✏ Edit" Click="NewEditButton_Click"
                                    Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                                    Padding="8 2" FontWeight="SemiBold"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>

            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Edit" Click="NewEditMenuItem_Click"/>
                    <Separator/>
                    <MenuItem Header="Transfer to Store" Command="{Binding TransferToStoreCommand}"/>
                    <MenuItem Header="Box to Individual" Command="{Binding BoxToIndividualCommand}"/>
                </ContextMenu>
            </DataGrid.ContextMenu>
        </DataGrid>

        <!-- Pagination Controls -->
        <Border Grid.Row="2" Background="#F8F8F8" Padding="8" CornerRadius="4" Margin="0 12 0 8">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                <Button Content="← Previous" Command="{Binding PreviousPageCommand}" Margin="0 0 8 0"/>

                <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                    <ComboBox ItemsSource="{Binding AvailablePageSizes}" SelectedItem="{Binding PageSize}"
                              Width="80" Margin="0 0 8 0"/>
                    <TextBlock Text="items per page"/>
                </StackPanel>

                <TextBlock Text="{Binding CurrentPage}" Margin="16 0" FontWeight="Bold"/>
                <TextBlock Text="of" Margin="0 0 16 0"/>
                <TextBlock Text="{Binding TotalPages}" FontWeight="Bold" Margin="0 0 16 0"/>

                <Button Content="Next →" Command="{Binding NextPageCommand}" Margin="8 0 0 0"/>
            </StackPanel>
        </Border>

        <!-- Status Messages -->
        <Border Grid.Row="3" Background="#FFF0F0" Padding="8" CornerRadius="4"
                Visibility="{Binding StatusMessage, Converter={StaticResource StringToVisibilityConverter}}">
            <TextBlock Text="{Binding StatusMessage}" Foreground="#666666" TextWrapping="Wrap"/>
        </Border>

        <!-- Loading Overlay -->
        <Border Grid.RowSpan="4" Background="#80000000"
                Visibility="{Binding IsSaving, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Border Background="White" CornerRadius="8" Padding="24" HorizontalAlignment="Center" VerticalAlignment="Center">
                <StackPanel>
                    <ProgressBar IsIndeterminate="True" Width="200" Height="8" Margin="0 0 0 12"/>
                    <TextBlock Text="{Binding StatusMessage}" HorizontalAlignment="Center" FontWeight="Medium"/>
                </StackPanel>
            </Border>
        </Border>

        <!-- Transfer Popup -->
        <Border Grid.RowSpan="4" Background="#80000000"
                Visibility="{Binding IsTransferPopupOpen, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Border Background="White" CornerRadius="8" Padding="24" Width="500" 
                    HorizontalAlignment="Center" VerticalAlignment="Center">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <TextBlock Text="Transfer Inventory" FontSize="18" FontWeight="Bold" Margin="0 0 0 16"/>

                    <StackPanel Grid.Row="1" Margin="0 0 0 16">
                        <TextBlock Text="{Binding SelectedItem.Name}" FontWeight="Medium"/>
                        <TextBlock Text="{Binding SelectedItem.Barcode}" Foreground="#666666"/>
                    </StackPanel>

                    <Grid Grid.Row="2" Margin="0 0 0 24">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <ComboBox Grid.Row="0" ItemsSource="{Binding StoreProducts}" DisplayMemberPath="Name"
                                 SelectedItem="{Binding SelectedStoreProduct}" Margin="0 0 0 12"/>

                        <StackPanel Grid.Row="1" Orientation="Horizontal" Margin="0 0 0 12">
                            <RadioButton Content="Transfer Items" IsChecked="{Binding TransferByItems}" Margin="0 0 16 0"/>
                            <RadioButton Content="Transfer Boxes" IsChecked="{Binding TransferByBoxes}"/>
                        </StackPanel>

                        <StackPanel Grid.Row="2" Orientation="Horizontal" Margin="0 0 0 12">
                            <TextBox Text="{Binding TransferQuantity}" Width="100" Margin="0 0 8 0"/>
                            <TextBlock Text="{Binding TransferByBoxes, Converter={StaticResource BoolToTextConverter}, ConverterParameter='boxes|items'}"
                                       VerticalAlignment="Center"/>
                        </StackPanel>

                        <StackPanel Grid.Row="3">
                            <TextBlock>
                                <Run Text="Available:" FontWeight="Medium"/>
                                <Run Text="{Binding SelectedItem.CurrentStock}"/>
                                <Run Text="items ("/>
                                <Run Text="{Binding SelectedItem.NumberOfBoxes}"/>
                                <Run Text="boxes)"/>
                            </TextBlock>
                            <TextBlock Text="{Binding SelectedItem.ItemsPerBox, StringFormat='Items per box: {0}'}"
                                       Foreground="#666666"/>
                        </StackPanel>
                    </Grid>

                    <StackPanel Grid.Row="3" Orientation="Horizontal" HorizontalAlignment="Right">
                        <Button Content="Cancel" Click="CloseTransferPopup_Click" Margin="0 0 8 0"/>
                        <Button Content="Confirm Transfer" Command="{Binding SaveTransferCommand}" 
                                Background="#007ACC" Foreground="White"/>
                    </StackPanel>
                </Grid>
            </Border>
        </Border>
    </Grid>
</UserControl>