<!-- Path: QuickTechSystems/Views/ProductView.xaml -->
<UserControl x:Class="QuickTechSystems.WPF.Views.ProductView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:QuickTechSystems.WPF.Views"
             xmlns:converters="clr-namespace:QuickTechSystems.WPF.Converters"
             mc:Ignorable="d"
             x:Name="ProductViewRoot"
             FlowDirection="{Binding FlowDirection}"
             RenderOptions.BitmapScalingMode="HighQuality"
             UseLayoutRounding="True">

    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <converters:ByteArrayToImageSourceConverter x:Key="ByteArrayToImageConverter"/>
        <converters:ProductTotalCostConverter x:Key="ProductTotalCostConverter"/>
        <converters:ProductTotalValueConverter x:Key="ProductTotalValueConverter"/>
        <converters:ProductTotalProfitConverter x:Key="ProductTotalProfitConverter"/>
        <converters:ProfitColorConverter x:Key="ProfitColorConverter"/>
        <converters:BoolToColorConverter x:Key="BoolToColorConverter"/>
        <converters:BoolToTextConverter x:Key="BoolToTextConverter"/>

        <!-- Search TextBox Style -->
        <Style x:Key="SearchTextBox" TargetType="TextBox">
            <Setter Property="Height" Value="36"/>
            <Setter Property="Padding" Value="36,0,12,0"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="#DDDDDD"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border x:Name="border" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" 
                                CornerRadius="18">
                            <Grid>
                                <Path Data="M15.5,14.5 L19.5,18.5" 
                                      Stroke="#999999" 
                                      StrokeThickness="1.5" 
                                      HorizontalAlignment="Left"
                                      VerticalAlignment="Center"
                                      Margin="16,0,0,0"/>
                                <Ellipse Stroke="#999999" 
                                         StrokeThickness="1.5" 
                                         Fill="Transparent" 
                                         Width="10" 
                                         Height="10" 
                                         HorizontalAlignment="Left" 
                                         VerticalAlignment="Center" 
                                         Margin="12,0,0,0"/>
                                <ScrollViewer x:Name="PART_ContentHost" 
                                             Focusable="False" 
                                             HorizontalScrollBarVisibility="Hidden" 
                                             VerticalScrollBarVisibility="Hidden"
                                             Padding="{TemplateBinding Padding}"
                                             Margin="0,0,0,0"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="#4285F4"/>
                                <Setter Property="BorderThickness" TargetName="border" Value="2"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Modern TextBox Style -->
        <Style x:Key="ModernTextBox" TargetType="TextBox">
            <Setter Property="Height" Value="36"/>
            <Setter Property="Padding" Value="12,0"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="BorderBrush" Value="#DDDDDD"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border x:Name="border" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" 
                                CornerRadius="4">
                            <ScrollViewer x:Name="PART_ContentHost" 
                                         Focusable="False" 
                                         HorizontalScrollBarVisibility="Hidden" 
                                         VerticalScrollBarVisibility="Hidden"
                                         Padding="{TemplateBinding Padding}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="#4285F4"/>
                                <Setter Property="BorderThickness" TargetName="border" Value="2"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Button Styles -->
        <Style x:Key="PrimaryButtonStyle" TargetType="Button">
            <Setter Property="Height" Value="36"/>
            <Setter Property="Padding" Value="12,0"/>
            <Setter Property="Background" Value="#4285F4"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                               BorderThickness="0"
                               CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center" 
                                            VerticalAlignment="Center"
                                            Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#3367D6"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#2A56C6"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SecondaryButtonStyle" TargetType="Button">
            <Setter Property="Height" Value="36"/>
            <Setter Property="Padding" Value="12,0"/>
            <Setter Property="Background" Value="#F2F2F2"/>
            <Setter Property="Foreground" Value="#333333"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="#DDDDDD"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                               BorderBrush="{TemplateBinding BorderBrush}"
                               BorderThickness="{TemplateBinding BorderThickness}"
                               CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center" 
                                            VerticalAlignment="Center"
                                            Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#E0E0E0"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#CCCCCC"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SuccessButtonStyle" TargetType="Button">
            <Setter Property="Height" Value="36"/>
            <Setter Property="Padding" Value="12,0"/>
            <Setter Property="Background" Value="#4CAF50"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                               BorderThickness="0"
                               CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center" 
                                            VerticalAlignment="Center"
                                            Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#388E3C"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#2E7D32"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="TextButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#4285F4"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                Padding="4,2">
                            <ContentPresenter HorizontalAlignment="Center" 
                                            VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="#1A73E8"/>
                                <Setter Property="FontWeight" Value="SemiBold"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- DataGrid Styles -->
        <Style x:Key="ResponsiveDataGrid" TargetType="DataGrid">
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="GridLinesVisibility" Value="Horizontal"/>
            <Setter Property="HorizontalGridLinesBrush" Value="#EEEEEE"/>
            <Setter Property="RowHeight" Value="50"/>
            <Setter Property="RowHeaderWidth" Value="0"/>
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="CanUserDeleteRows" Value="False"/>
            <Setter Property="CanUserResizeRows" Value="False"/>
            <Setter Property="SelectionMode" Value="Single"/>
            <Setter Property="SelectionUnit" Value="FullRow"/>
            <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="AlternatingRowBackground" Value="#F9F9F9"/>
            <Setter Property="RowBackground" Value="White"/>
            <Setter Property="EnableRowVirtualization" Value="True"/>
            <Setter Property="EnableColumnVirtualization" Value="True"/>
        </Style>

        <Style x:Key="ModernDataGridColumnHeader" TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="#F5F7FA"/>
            <Setter Property="Foreground" Value="#333333"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Padding" Value="8"/>
            <Setter Property="BorderThickness" Value="0,0,0,1"/>
            <Setter Property="BorderBrush" Value="#E0E0E0"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DataGridColumnHeader">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                 VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                 Margin="{TemplateBinding Padding}"/>
                                <Path x:Name="SortArrow" 
                                     Visibility="Collapsed" 
                                     Data="M0,0 L5,5 L10,0" 
                                     Fill="{TemplateBinding Foreground}" 
                                     HorizontalAlignment="Right" 
                                     VerticalAlignment="Center" 
                                     Margin="0,0,8,0"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="SortDirection" Value="Ascending">
                                <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                                <Setter Property="RenderTransform" TargetName="SortArrow">
                                    <Setter.Value>
                                        <RotateTransform Angle="180" CenterX="5" CenterY="2.5"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="SortDirection" Value="Descending">
                                <Setter Property="Visibility" TargetName="SortArrow" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ModernDataGridCell" TargetType="DataGridCell">
            <Setter Property="Padding" Value="8"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DataGridCell">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                SnapsToDevicePixels="True">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#E8F0FE"/>
                    <Setter Property="Foreground" Value="#202124"/>
                    <Setter Property="BorderBrush" Value="#D2E3FC"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Container Styles -->
        <Style x:Key="EnhancedResponsiveCardContainer" TargetType="Border">
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="#E0E0E0"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="CornerRadius" Value="8"/>
            <Setter Property="Padding" Value="16"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="UseLayoutRounding" Value="True"/>
        </Style>

        <Style x:Key="DataTableContainer" TargetType="Border">
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="#E0E0E0"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="CornerRadius" Value="8"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="UseLayoutRounding" Value="True"/>
        </Style>

        <Style x:Key="LoadingOverlay" TargetType="Border">
            <Setter Property="Background" Value="#80000000"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
        </Style>

        <Style x:Key="ModernProgressBar" TargetType="ProgressBar">
            <Setter Property="Foreground" Value="#4285F4"/>
            <Setter Property="Background" Value="#F2F2F2"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ProgressBar">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                CornerRadius="2">
                            <Grid x:Name="PART_Track">
                                <Rectangle x:Name="PART_Indicator" 
                                           HorizontalAlignment="Left" 
                                           Fill="{TemplateBinding Foreground}"/>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Text Styles -->
        <Style x:Key="BodyMedium" TargetType="TextBlock">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="#333333"/>
        </Style>

        <Style x:Key="ResponsivePageLayout" TargetType="Grid">
            <Setter Property="Margin" Value="24"/>
        </Style>
    </UserControl.Resources>

    <!-- Main Grid with shared size scope for consistent proportions -->
    <Grid Grid.IsSharedSizeScope="True">
        <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
            <TabControl SelectionChanged="TabControl_SelectionChanged">
                <TabItem Header="{DynamicResource Product_TabProducts}">
                    <Grid Style="{StaticResource ResponsivePageLayout}" x:Name="ContentGrid">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <!-- Header Row with Combined Controls -->
                            <RowDefinition Height="*"/>
                            <!-- DataGrid -->
                        </Grid.RowDefinitions>

                        <!-- HEADER ROW - Combined Controls and Financial Metrics -->
                        <Grid Grid.Row="0" Margin="0,0,0,16">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="Search"/>
                                <!-- Search -->
                                <ColumnDefinition Width="Auto" SharedSizeGroup="StockControls"/>
                                <!-- Stock Controls -->
                                <ColumnDefinition Width="Auto" SharedSizeGroup="BarcodeControls"/>
                                <!-- Barcode Controls -->
                                <ColumnDefinition Width="*" MinWidth="20"/>
                                <!-- Flexible Space -->
                                <ColumnDefinition Width="Auto" SharedSizeGroup="FinancialMetrics"/>
                                <!-- Financial Metrics -->
                                <ColumnDefinition Width="Auto" SharedSizeGroup="ActionButtons"/>
                                <!-- Action Buttons -->
                            </Grid.ColumnDefinitions>

                            <!-- Search Box -->
                            <Border Grid.Column="0" 
                                    Style="{StaticResource EnhancedResponsiveCardContainer}"
                                    Height="36" Padding="0" Margin="0,0,8,0">
                                <Grid>
                                    <TextBox x:Name="searchBox" 
                                             Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}" 
                                             Style="{StaticResource SearchTextBox}" 
                                             Width="180"
                                             Margin="0"/>
                                    <TextBlock IsHitTestVisible="False" 
                                               Text="{DynamicResource Product_SearchPlaceholder}" 
                                               VerticalAlignment="Center" 
                                               Margin="36,0,0,0" 
                                               Foreground="#999999">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Text, ElementName=searchBox}" Value="">
                                                        <Setter Property="Visibility" Value="Visible"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </Grid>
                            </Border>

                            <!-- Stock Controls with LARGER input field -->
                            <StackPanel Grid.Column="1" Orientation="Horizontal" Margin="8,0" VerticalAlignment="Center">
                                <TextBox Width="60"
                                        Style="{StaticResource ModernTextBox}"
                                        Text="{Binding StockIncrement, UpdateSourceTrigger=PropertyChanged}"
                                        Margin="0,0,4,0"
                                        FontSize="14"
                                        VerticalContentAlignment="Center"/>
                                <Button Content="{DynamicResource Product_AddToStock}"
                                        Command="{Binding UpdateStockCommand}"
                                        Style="{StaticResource SecondaryButtonStyle}"
                                        Padding="8,0"/>
                            </StackPanel>

                            <!-- Barcode Controls with LARGER input field -->
                            <StackPanel Grid.Column="2" Orientation="Horizontal" Margin="8,0" VerticalAlignment="Center">
                                <TextBlock Text="{DynamicResource Product_NumberOfLabels}" 
                                           Style="{StaticResource BodyMedium}"
                                           VerticalAlignment="Center"
                                           Margin="0,0,8,0"/>
                                <TextBox Width="60"
                                        Style="{StaticResource ModernTextBox}"
                                        Text="{Binding LabelsPerProduct, UpdateSourceTrigger=PropertyChanged}"
                                        VerticalAlignment="Center"
                                        FontSize="14"
                                        VerticalContentAlignment="Center"
                                        Margin="0,0,8,0"/>
                                <Button Content="{DynamicResource Product_PrintBarcode}"
                                        Command="{Binding PrintBarcodeCommand}"
                                        Style="{StaticResource SecondaryButtonStyle}"
                                        Padding="8,0"/>
                            </StackPanel>

                            <!-- Financial Metrics -->
                            <StackPanel Grid.Column="4" Orientation="Horizontal" VerticalAlignment="Center" Margin="8,0">
                                <StackPanel Orientation="Horizontal" Margin="0,0,16,0">
                                    <TextBlock Text="Purchase: " 
                                              Style="{StaticResource BodyMedium}"
                                              VerticalAlignment="Center"
                                              Margin="0,0,4,0"/>
                                    <TextBlock Text="{Binding TotalPurchaseValue, StringFormat=C2}"
                                              Style="{StaticResource BodyMedium}"
                                              FontWeight="SemiBold"
                                              Foreground="#4285F4"
                                              VerticalAlignment="Center"/>
                                </StackPanel>

                                <StackPanel Orientation="Horizontal" Margin="0,0,16,0">
                                    <TextBlock Text="Sales: " 
                                              Style="{StaticResource BodyMedium}"
                                              VerticalAlignment="Center"
                                              Margin="0,0,4,0"/>
                                    <TextBlock Text="{Binding TotalSaleValue, StringFormat=C2}"
                                              Style="{StaticResource BodyMedium}"
                                              FontWeight="SemiBold"
                                              Foreground="#4CAF50"
                                              VerticalAlignment="Center"/>
                                </StackPanel>

                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="Profit: " 
                                              Style="{StaticResource BodyMedium}"
                                              VerticalAlignment="Center"
                                              Margin="0,0,4,0"/>
                                    <TextBlock Text="{Binding TotalProfit, StringFormat=C2}"
                                              Style="{StaticResource BodyMedium}"
                                              FontWeight="SemiBold"
                                              VerticalAlignment="Center">
                                        <TextBlock.Foreground>
                                            <Binding Path="TotalProfit">
                                                <Binding.Converter>
                                                    <StaticResource ResourceKey="ProfitColorConverter"/>
                                                </Binding.Converter>
                                            </Binding>
                                        </TextBlock.Foreground>
                                    </TextBlock>
                                </StackPanel>
                            </StackPanel>

                            <!-- Action Buttons -->
                            <StackPanel Grid.Column="5" Orientation="Horizontal" VerticalAlignment="Center" Margin="8,0,0,0">
                                <Button Content="{DynamicResource Product_AddNew}" 
                                    Command="{Binding AddCommand}"
                                    Style="{StaticResource SuccessButtonStyle}" 
                                    Margin="0,0,8,0"
                                    Padding="12,0"/>
                                <Button Content="{DynamicResource Product_BulkAdd}"
                                    Command="{Binding BulkAddCommand}"
                                    Style="{StaticResource PrimaryButtonStyle}"
                                    Padding="12,0"/>
                            </StackPanel>
                        </Grid>

                        <!-- Product DataGrid -->
                        <Border Grid.Row="1" Style="{StaticResource DataTableContainer}">
                            <DataGrid x:Name="ProductsDataGrid"
                                    ItemsSource="{Binding Products}"
                                    SelectedItem="{Binding SelectedProduct}"
                                    Style="{StaticResource ResponsiveDataGrid}"
                                    ColumnHeaderStyle="{StaticResource ModernDataGridColumnHeader}"
                                    CellStyle="{StaticResource ModernDataGridCell}"
                                    AutoGenerateColumns="False"
                                    IsReadOnly="True"
                                    IsEnabled="{Binding IsNotSaving}"
                                    BorderThickness="0"
                                    MouseDoubleClick="DataGrid_MouseDoubleClick">
                                <DataGrid.Resources>
                                    <!-- Style for right-aligned numeric cells -->
                                    <Style x:Key="RightAlignedCell" TargetType="TextBlock">
                                        <Setter Property="TextAlignment" Value="Right"/>
                                        <Setter Property="Margin" Value="0,0,8,0"/>
                                    </Style>
                                </DataGrid.Resources>
                                <DataGrid.Columns>
                                    <!-- Image column with fixed width -->
                                    <DataGridTemplateColumn Header="{DynamicResource Product_Image}" Width="60">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Border Width="40" Height="40" Background="#F5F5F5" CornerRadius="4" BorderBrush="#E0E0E0" BorderThickness="1">
                                                    <Image Source="{Binding Image, Converter={StaticResource ByteArrayToImageConverter}, ConverterParameter=40}" 
                                                           Height="36" 
                                                           Width="36" 
                                                           Stretch="Uniform"
                                                           RenderOptions.BitmapScalingMode="HighQuality"/>
                                                </Border>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>

                                    <!-- Main product information columns -->
                                    <DataGridTextColumn Header="{DynamicResource Product_Barcode}" 
                                                        Binding="{Binding Barcode}"
                                                        Width="110"/>
                                    <DataGridTextColumn Header="{DynamicResource Product_Name}" 
                                                        Binding="{Binding Name}"
                                                        Width="*"
                                                        MinWidth="180"/>
                                    <DataGridTextColumn Header="{DynamicResource Product_Category}" 
                                                        Binding="{Binding CategoryName}"
                                                        Width="120"/>

                                    <!-- Inventory columns -->
                                    <DataGridTextColumn Header="{DynamicResource Product_CurrentStock}" 
                                                        Binding="{Binding CurrentStock}"
                                                        Width="85">
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="TextBlock" BasedOn="{StaticResource RightAlignedCell}"/>
                                        </DataGridTextColumn.ElementStyle>
                                    </DataGridTextColumn>

                                    <!-- Price columns with right-alignment -->
                                    <DataGridTextColumn Header="{DynamicResource Product_PurchasePrice}" 
                                                        Binding="{Binding PurchasePrice, StringFormat=C2}"
                                                        Width="100">
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="TextBlock" BasedOn="{StaticResource RightAlignedCell}"/>
                                        </DataGridTextColumn.ElementStyle>
                                    </DataGridTextColumn>

                                    <DataGridTextColumn Header="{DynamicResource Product_SalePrice}" 
                                                        Binding="{Binding SalePrice, StringFormat=C2}"
                                                        Width="100">
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="TextBlock" BasedOn="{StaticResource RightAlignedCell}"/>
                                        </DataGridTextColumn.ElementStyle>
                                    </DataGridTextColumn>

                                    <!-- Value columns - can be hidden on smaller screens -->
                                    <DataGridTemplateColumn Header="{DynamicResource Product_TotalCost}" Width="100">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Converter={StaticResource ProductTotalCostConverter}, StringFormat=C2}"
                                                           Foreground="#4285F4"
                                                           TextAlignment="Right"
                                                           Margin="0,0,8,0"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>

                                    <DataGridTemplateColumn Header="{DynamicResource Product_TotalValue}" Width="100">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Converter={StaticResource ProductTotalValueConverter}, StringFormat=C2}"
                                                           Foreground="#4CAF50"
                                                           TextAlignment="Right"
                                                           Margin="0,0,8,0"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>

                                    <!-- Profit column with conditional formatting -->
                                    <DataGridTemplateColumn Header="{DynamicResource Product_TotalProfit}" Width="100">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Converter={StaticResource ProductTotalProfitConverter}, StringFormat=C2}"
                                                           TextAlignment="Right"
                                                           Margin="0,0,8,0">
                                                    <TextBlock.Style>
                                                        <Style TargetType="TextBlock">
                                                            <Setter Property="Foreground" Value="Black"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Converter={StaticResource ProductTotalProfitConverter}, ConverterParameter=Check}" Value="Negative">
                                                                    <Setter Property="Foreground" Value="#E53935"/>
                                                                    <Setter Property="FontWeight" Value="SemiBold"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding Converter={StaticResource ProductTotalProfitConverter}, ConverterParameter=Check}" Value="Positive">
                                                                    <Setter Property="Foreground" Value="#4CAF50"/>
                                                                    <Setter Property="FontWeight" Value="SemiBold"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>

                                    <!-- Optional columns that can be placed at the end -->
                                    <DataGridTextColumn Header="{DynamicResource Product_Speed}" 
                                                        Binding="{Binding Speed}"
                                                        Width="70">
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="TextBlock" BasedOn="{StaticResource RightAlignedCell}"/>
                                        </DataGridTextColumn.ElementStyle>
                                    </DataGridTextColumn>

                                    <DataGridTextColumn Header="{DynamicResource Product_Supplier}" 
                                                        Binding="{Binding SupplierName}"
                                                        Width="120"/>

                                    <!-- Status column -->
                                    <DataGridTemplateColumn Header="{DynamicResource Product_IsActive}" Width="75">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Border Background="{Binding IsActive, Converter={StaticResource BoolToColorConverter}}" 
                                                        CornerRadius="4" 
                                                        Padding="4,2" 
                                                        HorizontalAlignment="Center">
                                                    <TextBlock Text="{Binding IsActive, Converter={StaticResource BoolToTextConverter}, ConverterParameter='Active|Inactive'}" 
                                                               Foreground="White" 
                                                               FontSize="11" 
                                                               FontWeight="SemiBold"
                                                               HorizontalAlignment="Center"/>
                                                </Border>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>

                                    <!-- Action buttons column -->
                                    <DataGridTemplateColumn Width="110">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <StackPanel Orientation="Horizontal">
                                                    <Button Content="{DynamicResource Product_Edit}"
                                                            Click="EditButton_Click"
                                                            Style="{StaticResource TextButtonStyle}"
                                                            Margin="0,0,8,0"/>
                                                   
                                                </StackPanel>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>

                                <DataGrid.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="{DynamicResource Product_EditMenuItem}" Click="EditMenuItem_Click"/>
                                        <Separator/>
                                        <MenuItem Header="{DynamicResource Product_DeleteMenuItem}" Command="{Binding DeleteCommand}"/>
                                    </ContextMenu>
                                </DataGrid.ContextMenu>
                            </DataGrid>
                        </Border>

                        <!-- Loading Overlay -->
                        <Border Grid.Row="0" 
                                Grid.RowSpan="2"
                                Style="{StaticResource LoadingOverlay}" 
                                Visibility="{Binding IsSaving, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Border Background="White"
                                    CornerRadius="4"
                                    Padding="20"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center">
                                <StackPanel>
                                    <ProgressBar Style="{StaticResource ModernProgressBar}"
                                                 IsIndeterminate="True"
                                                 Width="200"
                                                 Height="2"
                                                 Margin="0,0,0,10"/>
                                    <TextBlock Text="{Binding StatusMessage}"
                                              Style="{StaticResource BodyMedium}"
                                              HorizontalAlignment="Center"/>
                                </StackPanel>
                            </Border>
                        </Border>

                        <!-- Product Popup - Updated with improved rendering -->
                        <Popup IsOpen="{Binding IsProductPopupOpen, Mode=TwoWay}"
                               StaysOpen="True"
                               AllowsTransparency="True"
                               PlacementTarget="{Binding ElementName=ProductViewRoot}"
                               Placement="Center"
                               PopupAnimation="None"
                               Focusable="True"
                               Width="{Binding ActualWidth, ElementName=ProductViewRoot}"
                               Height="{Binding ActualHeight, ElementName=ProductViewRoot}"
                               RenderOptions.EdgeMode="Aliased">
                            <ContentControl Name="ProductDetailsPopupContainer" 
                                           RenderOptions.BitmapScalingMode="HighQuality" 
                                           UseLayoutRounding="True">
                                <local:ProductDetailsPopup DataContext="{Binding}"
                                                      CloseRequested="ProductDetailsPopup_CloseRequested"
                                                      SaveCompleted="ProductDetailsPopup_SaveCompleted"/>
                            </ContentControl>
                        </Popup>
                    </Grid>
                </TabItem>

                <TabItem Header="{DynamicResource Product_TabDamagedGoods}">
                    <!-- Use a ContentPresenter which can be dynamically loaded later -->
                    <ContentPresenter x:Name="DamagedGoodsContent">
                        <ContentPresenter.Content>
                            <TextBlock Text="{DynamicResource Product_DamagedGoodsImplementation}" 
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       FontSize="18"/>
                        </ContentPresenter.Content>
                    </ContentPresenter>
                </TabItem>
            </TabControl>
        </ScrollViewer>
    </Grid>
</UserControl>