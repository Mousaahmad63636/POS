<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- ======================== -->
    <!-- COLOR PALETTE            -->
    <!-- ======================== -->

    <!-- Primary Colors -->
    <SolidColorBrush x:Key="PrimaryColor" Color="#007BFF"/>
    <SolidColorBrush x:Key="PrimaryLightColor" Color="#3395FF"/>
    <SolidColorBrush x:Key="PrimaryDarkColor" Color="#0056b3"/>

    <!-- Accent Colors -->
    <SolidColorBrush x:Key="AccentColor" Color="#6366f1"/>
    <SolidColorBrush x:Key="SecondaryColor" Color="#6C757D"/>
    <SolidColorBrush x:Key="SuccessColor" Color="#28A745"/>
    <SolidColorBrush x:Key="DangerColor" Color="#DC3545"/>
    <SolidColorBrush x:Key="WarningColor" Color="#FFC107"/>
    <SolidColorBrush x:Key="InfoColor" Color="#17A2B8"/>

    <!-- Text Colors -->
    <SolidColorBrush x:Key="TextPrimaryColor" Color="#343A40"/>
    <SolidColorBrush x:Key="TextSecondaryColor" Color="#6C757D"/>
    <SolidColorBrush x:Key="TextTertiaryColor" Color="#ADB5BD"/>
    <SolidColorBrush x:Key="TextLightColor" Color="#F8F9FA"/>
    <SolidColorBrush x:Key="TextDarkColor" Color="#212529"/>

    <!-- Background Colors -->
    <SolidColorBrush x:Key="BackgroundColor" Color="#F8F9FA"/>
    <SolidColorBrush x:Key="SurfaceColor" Color="White"/>
    <SolidColorBrush x:Key="BorderColor" Color="#E0E0E0"/>
    <SolidColorBrush x:Key="DividerColor" Color="#DEE2E6"/>
    <SolidColorBrush x:Key="DisabledColor" Color="#F5F5F5"/>

    <!-- Semantic Colors -->
    <SolidColorBrush x:Key="PositiveGreen" Color="#059669"/>
    <SolidColorBrush x:Key="NegativeRed" Color="#dc2626"/>
    <SolidColorBrush x:Key="NeutralGrey" Color="#9CA3AF"/>
    <SolidColorBrush x:Key="IconColor" Color="#6366f1"/>

    <!-- ======================== -->
    <!-- SHADOWS & EFFECTS        -->
    <!-- ======================== -->

    <DropShadowEffect x:Key="SmallShadow" BlurRadius="5" ShadowDepth="1" Opacity="0.2"/>
    <DropShadowEffect x:Key="MediumShadow" BlurRadius="10" ShadowDepth="2" Opacity="0.15"/>
    <DropShadowEffect x:Key="LargeShadow" BlurRadius="20" ShadowDepth="3" Opacity="0.1"/>
    <DropShadowEffect x:Key="FloatingShadow" BlurRadius="15" ShadowDepth="4" Opacity="0.2"/>
    <DropShadowEffect x:Key="ModalShadow" BlurRadius="25" ShadowDepth="5" Opacity="0.25"/>

    <!-- ======================== -->
    <!-- TYPOGRAPHY STYLES        -->
    <!-- ======================== -->

    <!-- Display Styles -->
    <Style x:Key="DisplayLarge" TargetType="TextBlock">
        <Setter Property="FontSize" Value="40"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="{StaticResource TextPrimaryColor}"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="LineHeight" Value="48"/>
    </Style>

    <Style x:Key="DisplayMedium" TargetType="TextBlock">
        <Setter Property="FontSize" Value="32"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="{StaticResource TextPrimaryColor}"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="LineHeight" Value="40"/>
    </Style>

    <Style x:Key="DisplaySmall" TargetType="TextBlock">
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="{StaticResource TextPrimaryColor}"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="LineHeight" Value="32"/>
    </Style>

    <!-- Headline Styles -->
    <Style x:Key="HeadlineLarge" TargetType="TextBlock">
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{StaticResource TextPrimaryColor}"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="LineHeight" Value="28"/>
    </Style>

    <Style x:Key="HeadlineMedium" TargetType="TextBlock">
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{StaticResource TextPrimaryColor}"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="LineHeight" Value="24"/>
    </Style>

    <Style x:Key="HeadlineSmall" TargetType="TextBlock">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{StaticResource TextPrimaryColor}"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="LineHeight" Value="22"/>
    </Style>

    <!-- Body Styles -->
    <Style x:Key="BodyLarge" TargetType="TextBlock">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Foreground" Value="{StaticResource TextPrimaryColor}"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="LineHeight" Value="22"/>
    </Style>

    <Style x:Key="BodyMedium" TargetType="TextBlock">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="{StaticResource TextPrimaryColor}"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="LineHeight" Value="20"/>
    </Style>

    <Style x:Key="BodySmall" TargetType="TextBlock">
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="{StaticResource TextPrimaryColor}"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="LineHeight" Value="18"/>
    </Style>

    <!-- Label Styles -->
    <Style x:Key="LabelLarge" TargetType="TextBlock">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{StaticResource TextPrimaryColor}"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <Style x:Key="LabelMedium" TargetType="TextBlock">
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{StaticResource TextPrimaryColor}"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <Style x:Key="LabelSmall" TargetType="TextBlock">
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{StaticResource TextPrimaryColor}"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <!-- Section-specific Typography -->
    <Style x:Key="SectionTitle" TargetType="TextBlock" BasedOn="{StaticResource HeadlineLarge}">
        <Setter Property="Margin" Value="0,0,0,16"/>
        <Setter Property="Foreground" Value="{StaticResource PrimaryColor}"/>
    </Style>

    <Style x:Key="SectionSubtitle" TargetType="TextBlock" BasedOn="{StaticResource BodyMedium}">
        <Setter Property="Margin" Value="0,0,0,24"/>
        <Setter Property="Foreground" Value="{StaticResource TextSecondaryColor}"/>
    </Style>

    <Style x:Key="TableTitle" TargetType="TextBlock" BasedOn="{StaticResource HeadlineSmall}">
        <Setter Property="Margin" Value="0,0,0,16"/>
    </Style>

    <Style x:Key="MetricLabel" TargetType="TextBlock" BasedOn="{StaticResource LabelMedium}">
        <Setter Property="Foreground" Value="{StaticResource TextSecondaryColor}"/>
        <Setter Property="Margin" Value="0,0,0,4"/>
    </Style>

    <Style x:Key="MetricValue" TargetType="TextBlock">
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Margin" Value="0,0,0,4"/>
    </Style>

    <Style x:Key="MetricChangePositive" TargetType="TextBlock" BasedOn="{StaticResource BodySmall}">
        <Setter Property="Foreground" Value="{StaticResource SuccessColor}"/>
    </Style>

    <Style x:Key="MetricChangeNegative" TargetType="TextBlock" BasedOn="{StaticResource BodySmall}">
        <Setter Property="Foreground" Value="{StaticResource DangerColor}"/>
    </Style>

    <Style x:Key="MetricChangeNeutral" TargetType="TextBlock" BasedOn="{StaticResource BodySmall}">
        <Setter Property="Foreground" Value="{StaticResource TextSecondaryColor}"/>
    </Style>

    <!-- Form-specific Typography -->
    <Style x:Key="FormLabel" TargetType="TextBlock" BasedOn="{StaticResource LabelMedium}">
        <Setter Property="Margin" Value="0,0,0,4"/>
    </Style>

    <Style x:Key="FormReadOnlyText" TargetType="TextBlock" BasedOn="{StaticResource BodyMedium}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="8,0"/>
    </Style>

    <Style x:Key="FormHelpText" TargetType="TextBlock" BasedOn="{StaticResource BodySmall}">
        <Setter Property="Foreground" Value="{StaticResource TextSecondaryColor}"/>
        <Setter Property="Margin" Value="0,4,0,0"/>
    </Style>

    <Style x:Key="ValidationError" TargetType="TextBlock" BasedOn="{StaticResource BodySmall}">
        <Setter Property="Foreground" Value="{StaticResource DangerColor}"/>
        <Setter Property="Margin" Value="0,4,0,0"/>
    </Style>

    <!-- ======================== -->
    <!-- LAYOUT STYLES            -->
    <!-- ======================== -->

    <!-- Page Layouts -->
    <Style x:Key="PageLayout" TargetType="Grid">
        <Setter Property="Margin" Value="24"/>
    </Style>

    <Style x:Key="TwoColumnPageLayout" TargetType="Grid">
        <Setter Property="Margin" Value="24"/>
    </Style>

    <Style x:Key="DetailPageLayout" TargetType="Grid">
        <Setter Property="Margin" Value="24"/>
    </Style>

    <Style x:Key="DashboardLayout" TargetType="Grid">
        <Setter Property="Margin" Value="20"/>
    </Style>

    <!-- Section Layouts -->
    <Style x:Key="SectionHeader" TargetType="StackPanel">
        <Setter Property="Margin" Value="0,0,0,24"/>
    </Style>

    <Style x:Key="FormSection" TargetType="StackPanel">
        <Setter Property="Margin" Value="0,0,0,16"/>
    </Style>

    <Style x:Key="FormActions" TargetType="Grid">
        <Setter Property="Margin" Value="0,16,0,0"/>
    </Style>

    <Style x:Key="TableHeader" TargetType="StackPanel">
        <Setter Property="Orientation" Value="Horizontal"/>
        <Setter Property="Margin" Value="0,0,0,16"/>
    </Style>

    <Style x:Key="TableActions" TargetType="StackPanel">
        <Setter Property="Orientation" Value="Horizontal"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
    </Style>

    <Style x:Key="PageDivider" TargetType="Border">
        <Setter Property="Height" Value="1"/>
        <Setter Property="Background" Value="{StaticResource BorderColor}"/>
        <Setter Property="Margin" Value="0,8,0,16"/>
    </Style>

    <!-- Grid Layouts -->
    <Style x:Key="GridContainer" TargetType="Grid">
        <Setter Property="Margin" Value="0,0,0,16"/>
    </Style>

    <Style x:Key="NestedGrid" TargetType="Grid">
        <Setter Property="Margin" Value="0"/>
    </Style>

    <!-- ======================== -->
    <!-- FORM ELEMENT STYLES      -->
    <!-- ======================== -->

    <!-- Text Boxes -->
    <Style x:Key="ModernTextBox" TargetType="TextBox">
        <Setter Property="Height" Value="36"/>
        <Setter Property="Padding" Value="12,8"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="{StaticResource SurfaceColor}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="0,0,0,16"/>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource PrimaryColor}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#F5F5F5"/>
                <Setter Property="Foreground" Value="{StaticResource TextSecondaryColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SearchTextBox" TargetType="TextBox" BasedOn="{StaticResource ModernTextBox}">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Background" Value="{StaticResource BackgroundColor}"/>
    </Style>

    <Style x:Key="FormField" TargetType="TextBox" BasedOn="{StaticResource ModernTextBox}">
        <Setter Property="Margin" Value="0,0,0,16"/>
    </Style>

    <Style x:Key="FormTextArea" TargetType="TextBox" BasedOn="{StaticResource ModernTextBox}">
        <Setter Property="Height" Value="80"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="AcceptsReturn" Value="True"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Margin" Value="0,0,0,16"/>
    </Style>

    <Style x:Key="FormReadOnlyField" TargetType="Border">
        <Setter Property="Background" Value="#F8F9FA"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Height" Value="36"/>
        <Setter Property="Margin" Value="0,0,0,16"/>
    </Style>

    <Style x:Key="NumericTextBox" TargetType="TextBox" BasedOn="{StaticResource ModernTextBox}">
        <Setter Property="HorizontalContentAlignment" Value="Right"/>
    </Style>

    <!-- Password Box -->
    <Style x:Key="ModernPasswordBox" TargetType="PasswordBox">
        <Setter Property="Height" Value="36"/>
        <Setter Property="Padding" Value="12,8"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="{StaticResource SurfaceColor}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="0,0,0,16"/>
    </Style>

    <!-- Combo Box -->
    <Style x:Key="ModernComboBox" TargetType="ComboBox">
        <Setter Property="Height" Value="36"/>
        <Setter Property="Padding" Value="12,8"/>
        <Setter Property="Background" Value="{StaticResource SurfaceColor}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="0,0,0,16"/>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource PrimaryColor}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#F5F5F5"/>
                <Setter Property="Foreground" Value="{StaticResource TextSecondaryColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Date Picker -->
    <Style x:Key="ModernDatePicker" TargetType="DatePicker">
        <Setter Property="Height" Value="36"/>
        <Setter Property="Padding" Value="12,8"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="{StaticResource SurfaceColor}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="0,0,0,16"/>
    </Style>

    <!-- CheckBox -->
    <Style x:Key="ModernCheckBox" TargetType="CheckBox">
        <Setter Property="Margin" Value="0,0,0,16"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>

    <!-- RadioButton -->
    <Style x:Key="ModernRadioButton" TargetType="RadioButton">
        <Setter Property="Margin" Value="0,0,0,8"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>

    <!-- ProgressBar -->
    <Style x:Key="ModernProgressBar" TargetType="ProgressBar">
        <Setter Property="Height" Value="4"/>
        <Setter Property="Foreground" Value="{StaticResource PrimaryColor}"/>
        <Setter Property="Background" Value="#E0E0E0"/>
    </Style>

    <!-- Slider -->
    <Style x:Key="ModernSlider" TargetType="Slider">
        <Setter Property="Margin" Value="0,0,0,16"/>
        <Setter Property="TickPlacement" Value="None"/>
        <Setter Property="IsSnapToTickEnabled" Value="True"/>
        <Setter Property="AutoToolTipPlacement" Value="TopLeft"/>
    </Style>

    <!-- ======================== -->
    <!-- BUTTON STYLES            -->
    <!-- ======================== -->

    <!-- Base Button -->
    <Style x:Key="BaseButtonStyle" TargetType="Button">
        <Setter Property="Height" Value="36"/>
        <Setter Property="Padding" Value="16,0"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4">
                        <ContentPresenter HorizontalAlignment="Center" 
                                          VerticalAlignment="Center" 
                                          Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Opacity" Value="0.8"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Opacity" Value="0.7"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Primary Button -->
    <Style x:Key="PrimaryButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Background" Value="{StaticResource PrimaryColor}"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <!-- Secondary Button -->
    <Style x:Key="SecondaryButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Background" Value="{StaticResource SecondaryColor}"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <!-- Success Button -->
    <Style x:Key="SuccessButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Background" Value="{StaticResource SuccessColor}"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <!-- Danger Button -->
    <Style x:Key="DangerButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Background" Value="{StaticResource DangerColor}"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <!-- Warning Button -->
    <Style x:Key="WarningButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Background" Value="{StaticResource WarningColor}"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <!-- Info Button -->
    <Style x:Key="InfoButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Background" Value="{StaticResource InfoColor}"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <!-- Accent Button -->
    <Style x:Key="AccentButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Background" Value="{StaticResource AccentColor}"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <!-- Text Button -->
    <Style x:Key="TextButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource PrimaryColor}"/>
        <Setter Property="Padding" Value="8,0"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#F0F0F0"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#E0E0E0"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Icon Button -->
    <Style x:Key="IconButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Width" Value="36"/>
        <Setter Property="Height" Value="36"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource TextSecondaryColor}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#F0F0F0"/>
                <Setter Property="Foreground" Value="{StaticResource TextPrimaryColor}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#E0E0E0"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Large Action Button -->
    <Style x:Key="LargeActionButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Height" Value="48"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Padding" Value="24,0"/>
        <Setter Property="Background" Value="{StaticResource PrimaryColor}"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <!-- Rounded Button -->
    <Style x:Key="RoundedButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="18">
                        <ContentPresenter HorizontalAlignment="Center" 
                                        VerticalAlignment="Center" 
                                        Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Opacity" Value="0.8"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Opacity" Value="0.7"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Circular Button -->
    <Style x:Key="CircularButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="20">
                        <ContentPresenter HorizontalAlignment="Center" 
                                        VerticalAlignment="Center" 
                                        Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Opacity" Value="0.8"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Opacity" Value="0.7"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ======================== -->
    <!-- CONTAINER STYLES         -->
    <!-- ======================== -->

    <!-- Card Container -->
    <Style x:Key="CardContainer" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource SurfaceColor}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="8"/>
        <Setter Property="Padding" Value="20"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="10" 
                                  ShadowDepth="2" 
                                  Opacity="0.1"/>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Data Table Container -->
    <Style x:Key="DataTableContainer" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource SurfaceColor}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="8"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="10" 
                                  ShadowDepth="2" 
                                  Opacity="0.1"/>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Modal Container -->
    <Style x:Key="ModalContainer" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource SurfaceColor}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="8"/>
        <Setter Property="Padding" Value="24"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="20" 
                                  ShadowDepth="5" 
                                  Opacity="0.2"/>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Metric Card -->
    <Style x:Key="MetricCard" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource SurfaceColor}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="8"/>
        <Setter Property="Padding" Value="16"/>
        <Setter Property="Margin" Value="0,0,0,16"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="8" 
                                  ShadowDepth="1" 
                                  Opacity="0.1"/>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Error Notification -->
    <Style x:Key="ErrorNotification" TargetType="Border">
        <Setter Property="Background" Value="#FEE2E2"/>
        <Setter Property="BorderBrush" Value="#F87171"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="4"/>
        <Setter Property="Padding" Value="16"/>
        <Setter Property="Margin" Value="0,16,0,0"/>
    </Style>

    <!-- Success Notification -->
    <Style x:Key="SuccessNotification" TargetType="Border">
        <Setter Property="Background" Value="#D1FAE5"/>
        <Setter Property="BorderBrush" Value="#34D399"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="4"/>
        <Setter Property="Padding" Value="16"/>
        <Setter Property="Margin" Value="0,16,0,0"/>
    </Style>

    <!-- Warning Notification -->
    <Style x:Key="WarningNotification" TargetType="Border">
        <Setter Property="Background" Value="#FEF3C7"/>
        <Setter Property="BorderBrush" Value="#FBBF24"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="4"/>
        <Setter Property="Padding" Value="16"/>
        <Setter Property="Margin" Value="0,16,0,0"/>
    </Style>

    <!-- Info Notification -->
    <Style x:Key="InfoNotification" TargetType="Border">
        <Setter Property="Background" Value="#DBEAFE"/>
        <Setter Property="BorderBrush" Value="#60A5FA"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="4"/>
        <Setter Property="Padding" Value="16"/>
        <Setter Property="Margin" Value="0,16,0,0"/>
    </Style>

    <!-- Loading Overlay -->
    <Style x:Key="LoadingOverlay" TargetType="Border">
        <Setter Property="Background" Value="#80000000"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
    </Style>

    <!-- Panel Container -->
    <Style x:Key="PanelContainer" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource BackgroundColor}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="4"/>
        <Setter Property="Padding" Value="16"/>
        <Setter Property="Margin" Value="0,0,0,16"/>
    </Style>

    <!-- Dialog Container -->
    <Style x:Key="DialogContainer" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource SurfaceColor}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="8"/>
        <Setter Property="Padding" Value="24"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="30" 
                                  ShadowDepth="10" 
                                  Opacity="0.25"/>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ======================== -->
    <!-- DATAGRID STYLES          -->
    <!-- ======================== -->

    <!-- DataGrid -->
    <Style x:Key="ModernDataGrid" TargetType="DataGrid">
        <Setter Property="Background" Value="{StaticResource SurfaceColor}"/>
        <Setter Property="RowBackground" Value="{StaticResource SurfaceColor}"/>
        <Setter Property="AlternatingRowBackground" Value="#F8F9FA"/>
        <Setter Property="GridLinesVisibility" Value="Horizontal"/>
        <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource BorderColor}"/>
        <Setter Property="VerticalGridLinesBrush" Value="Transparent"/>
        <Setter Property="RowHeight" Value="40"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="CanUserReorderColumns" Value="True"/>
        <Setter Property="CanUserResizeColumns" Value="True"/>
        <Setter Property="CanUserResizeRows" Value="False"/>
        <Setter Property="CanUserSortColumns" Value="True"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="SelectionUnit" Value="FullRow"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <!-- DataGrid Column Header -->
    <Style x:Key="ModernDataGridColumnHeader" TargetType="DataGridColumnHeader">
        <Setter Property="Background" Value="{StaticResource PrimaryColor}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Padding" Value="12,8"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Height" Value="40"/>
    </Style>

    <!-- DataGrid Cell -->
    <Style x:Key="ModernDataGridCell" TargetType="DataGridCell">
        <Setter Property="Padding" Value="12,8"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridCell">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#E3F2FD"/>
                <Setter Property="Foreground" Value="{StaticResource TextPrimaryColor}"/>
                <Setter Property="BorderBrush" Value="{StaticResource PrimaryColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- DataGrid Row -->
    <Style x:Key="ModernDataGridRow" TargetType="DataGridRow">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#F0F7FF"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- ======================== -->
    <!-- TAB CONTROL STYLES       -->
    <!-- ======================== -->

    <!-- Tab Control -->
    <Style x:Key="ModernTabControl" TargetType="TabControl">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="0"/>
    </Style>

    <!-- Tab Item -->
    <Style x:Key="ModernTabItem" TargetType="TabItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border x:Name="mainBorder" 
                            Background="{TemplateBinding Background}"
                            Margin="0,0,16,0">
                        <Grid>
                            <ContentPresenter x:Name="contentPresenter"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            ContentSource="Header"
                                            Margin="12,8"/>
                            <Border x:Name="selectedBorder" 
                                    Height="2" 
                                    Background="{StaticResource PrimaryColor}" 
                                    VerticalAlignment="Bottom" 
                                    Visibility="Collapsed"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource PrimaryColor}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource PrimaryColor}"/>
                            <Setter TargetName="selectedBorder" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{StaticResource TextSecondaryColor}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <!-- Vertical Tab Item -->
    <Style x:Key="VerticalTabItem" TargetType="TabItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border x:Name="mainBorder" 
                            Background="{TemplateBinding Background}"
                            Margin="0,0,0,8">
                        <Grid>
                            <ContentPresenter x:Name="contentPresenter"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Center"
                                            ContentSource="Header"
                                            Margin="12,8"/>
                            <Border x:Name="selectedBorder" 
                                    Width="3" 
                                    Background="{StaticResource PrimaryColor}" 
                                    HorizontalAlignment="Left" 
                                    Visibility="Collapsed"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#F0F7FF"/>
                            <Setter Property="Foreground" Value="{StaticResource PrimaryColor}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#E3F2FD"/>
                            <Setter Property="Foreground" Value="{StaticResource PrimaryColor}"/>
                            <Setter TargetName="selectedBorder" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{StaticResource TextSecondaryColor}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <!-- ======================== -->
    <!-- RESPONSIVE STYLES        -->
    <!-- ======================== -->

    <!-- Responsive Grid Layouts for Different Screen Sizes -->
    <Style x:Key="ResponsivePageLayout" TargetType="Grid" BasedOn="{StaticResource PageLayout}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}, Path=ActualWidth}" Value="1920">
                <Setter Property="Margin" Value="32"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}, Path=ActualWidth}" Value="1366">
                <Setter Property="Margin" Value="24"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}, Path=ActualWidth}" Value="800">
                <Setter Property="Margin" Value="16"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}, Path=ActualWidth}" Value="600">
                <Setter Property="Margin" Value="8"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- Responsive Two Column Layout -->
    <Style x:Key="ResponsiveTwoColumnLayout" TargetType="Grid" BasedOn="{StaticResource TwoColumnPageLayout}">
        <Style.Triggers>
            <!-- For smaller screens, adjust column widths or collapse to single column -->
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}, Path=ActualWidth}" Value="1920">
                <Setter Property="Margin" Value="32"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}, Path=ActualWidth}" Value="1366">
                <Setter Property="Margin" Value="24"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}, Path=ActualWidth}" Value="800">
                <Setter Property="Margin" Value="16"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}, Path=ActualWidth}" Value="600">
                <Setter Property="Margin" Value="8"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- Responsive Card Container -->
    <Style x:Key="ResponsiveCardContainer" TargetType="Border" BasedOn="{StaticResource CardContainer}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}, Path=ActualWidth}" Value="800">
                <Setter Property="Padding" Value="16"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}, Path=ActualWidth}" Value="600">
                <Setter Property="Padding" Value="12"/>
                <Setter Property="CornerRadius" Value="6"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- Enhanced Responsive Card Container -->
    <Style x:Key="EnhancedResponsiveCardContainer" BasedOn="{StaticResource ResponsiveCardContainer}" TargetType="Border">
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}, Path=ActualWidth}" Value="1920">
                <Setter Property="Padding" Value="24"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}, Path=ActualWidth}" Value="1366">
                <Setter Property="Padding" Value="20"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}, Path=ActualWidth}" Value="800">
                <Setter Property="Padding" Value="16"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}, Path=ActualWidth}" Value="600">
                <Setter Property="Padding" Value="12"/>
                <Setter Property="CornerRadius" Value="6"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- Responsive DataGrid for smaller screens -->
    <Style x:Key="ResponsiveDataGrid" BasedOn="{StaticResource ModernDataGrid}" TargetType="DataGrid">
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}, Path=ActualWidth}" Value="800">
                <Setter Property="RowHeight" Value="38"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}, Path=ActualWidth}" Value="600">
                <Setter Property="RowHeight" Value="36"/>
                <Setter Property="FontSize" Value="12"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- Login-specific styles -->
    <Style x:Key="LoginFormContainer" BasedOn="{StaticResource CardContainer}" TargetType="Border">
        <Setter Property="Padding" Value="24"/>
        <Setter Property="Margin" Value="16,8"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect ShadowDepth="2" Direction="315" BlurRadius="8" Opacity="0.1"/>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Logo styles -->
    <Style x:Key="LogoContainer" TargetType="Ellipse">
        <Setter Property="Width" Value="80"/>
        <Setter Property="Height" Value="80"/>
        <Setter Property="Fill" Value="{StaticResource PrimaryColor}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,0,0,16"/>
    </Style>

    <!-- Responsive Window Layout -->
    <Style x:Key="ResponsiveWindowLayout">
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}, Path=ActualWidth}" Value="800">
                <Setter Property="FrameworkElement.Margin" Value="16"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}, Path=ActualWidth}" Value="480">
                <Setter Property="FrameworkElement.Margin" Value="8"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- Responsive Button -->
    <Style x:Key="ResponsiveButtonStyle" BasedOn="{StaticResource PrimaryButtonStyle}" TargetType="Button">
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}, Path=ActualWidth}" Value="800">
                <Setter Property="Padding" Value="12,6"/>
                <Setter Property="FontSize" Value="12"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}, Path=ActualWidth}" Value="600">
                <Setter Property="Padding" Value="8,4"/>
                <Setter Property="FontSize" Value="11"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- ======================== -->
    <!-- MENU & NAVIGATION STYLES -->
    <!-- ======================== -->

    <!-- Menu Item -->
    <Style x:Key="MainMenuItem" TargetType="MenuItem">
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>

    <!-- Side Navigation Item -->
    <Style x:Key="SideNavItem" TargetType="Button">
        <Setter Property="Height" Value="40"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource TextPrimaryColor}"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="16,0"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#F0F7FF"/>
                <Setter Property="Foreground" Value="{StaticResource PrimaryColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Active Side Navigation Item -->
    <Style x:Key="ActiveSideNavItem" TargetType="Button" BasedOn="{StaticResource SideNavItem}">
        <Setter Property="Background" Value="#E3F2FD"/>
        <Setter Property="Foreground" Value="{StaticResource PrimaryColor}"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="BorderThickness" Value="4,0,0,0"/>
        <Setter Property="BorderBrush" Value="{StaticResource PrimaryColor}"/>
    </Style>

    <!-- Navigation Section Header -->
    <Style x:Key="NavSectionHeader" TargetType="TextBlock">
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{StaticResource TextSecondaryColor}"/>
        <Setter Property="Margin" Value="16,16,16,8"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <!-- Breadcrumb Item -->
    <Style x:Key="BreadcrumbItem" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource TextSecondaryColor}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="4"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource PrimaryColor}"/>
                <Setter Property="FontWeight" Value="Bold"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Current Breadcrumb Item -->
    <Style x:Key="CurrentBreadcrumbItem" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource TextPrimaryColor}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
    </Style>
</ResourceDictionary>