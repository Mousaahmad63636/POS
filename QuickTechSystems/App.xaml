<Application x:Class="QuickTechSystems.WPF.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:converters="clr-namespace:QuickTechSystems.WPF.Converters"
             xmlns:vm="clr-namespace:QuickTechSystems.WPF.ViewModels"
             xmlns:views="clr-namespace:QuickTechSystems.WPF.Views">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Resources/Dictionaries/Languages/en-US.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <!-- System Colors -->
            <Color x:Key="PrimaryBackgroundColor">#F7F9FC</Color>
            <Color x:Key="SurfaceColor">#FCFCFF</Color>
            <Color x:Key="BorderColor">#E8ECF2</Color>
            <Color x:Key="AccentColor">#6787D8</Color>
            <Color x:Key="AccentDarkColor">#4A6FBF</Color>
            <Color x:Key="TextPrimaryColor">#2C3E50</Color>
            <Color x:Key="TextSecondaryColor">#3F526E</Color>
            <Color x:Key="TextTertiaryColor">#6B7C93</Color>
            <Color x:Key="HoverColor">#F2F6FF</Color>
            <Color x:Key="ShadowColor">#B0B8C9</Color>
            <Color x:Key="ErrorLightColor">#FFF5F8</Color>
            <Color x:Key="ErrorBorderColor">#F3D4DA</Color>
            <Color x:Key="ErrorTextColor">#9A4355</Color>
            <Color x:Key="SuccessColor">#48BB78</Color>

            <!-- Brushes -->
            <SolidColorBrush x:Key="PrimaryBackgroundBrush" Color="{StaticResource PrimaryBackgroundColor}"/>
            <SolidColorBrush x:Key="SurfaceBrush" Color="{StaticResource SurfaceColor}"/>
            <SolidColorBrush x:Key="BorderBrush" Color="{StaticResource BorderColor}"/>
            <SolidColorBrush x:Key="AccentBrush" Color="{StaticResource AccentColor}"/>
            <SolidColorBrush x:Key="AccentDarkBrush" Color="{StaticResource AccentDarkColor}"/>
            <SolidColorBrush x:Key="TextPrimaryBrush" Color="{StaticResource TextPrimaryColor}"/>
            <SolidColorBrush x:Key="TextSecondaryBrush" Color="{StaticResource TextSecondaryColor}"/>
            <SolidColorBrush x:Key="TextTertiaryBrush" Color="{StaticResource TextTertiaryColor}"/>
            <SolidColorBrush x:Key="HoverBrush" Color="{StaticResource HoverColor}"/>
            <SolidColorBrush x:Key="ErrorLightBrush" Color="{StaticResource ErrorLightColor}"/>
            <SolidColorBrush x:Key="ErrorBorderBrush" Color="{StaticResource ErrorBorderColor}"/>
            <SolidColorBrush x:Key="ErrorTextBrush" Color="{StaticResource ErrorTextColor}"/>
            <SolidColorBrush x:Key="SuccessBrush" Color="{StaticResource SuccessColor}"/>

            <!-- Converters -->
            <converters:IndexConverter x:Key="IndexConverter"/>
            <converters:IntZeroToBoolConverter x:Key="IntZeroToBoolConverter"/>
            <converters:InverseNullToVisibilityConverter x:Key="InverseNullToVisibilityConverter"/>
            <converters:FilePathToImageConverter x:Key="FilePathToImageConverter"/>
            <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <converters:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter"/>
            <converters:ByteArrayToImageConverter x:Key="ByteArrayToImageConverter"/>
            <converters:LessThanZeroConverter x:Key="LessThanZeroConverter"/>
            <converters:NegativeValueConverter x:Key="NegativeValueConverter"/>
            <converters:CustomerSpecificPriceConverter x:Key="CustomerSpecificPriceConverter"/>
            <converters:CategoryHighlightConverter x:Key="CategoryHighlightConverter"/>
            <converters:StringToVisibilityConverter x:Key="StringToVisibilityConverter"/>
            <converters:BoolToTextConverter x:Key="BoolToTextConverter"/>
            <converters:TableStatusColorConverter x:Key="TableStatusColorConverter"/>
            <converters:PaymentButtonVisibilityConverter x:Key="PaymentButtonVisibilityConverter"/>
            <converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />
            <converters:MultiValueStockToBoxesConverter x:Key="MultiValueStockToBoxesConverter"/>
            <converters:ProductCostMultiConverter x:Key="ProductCostMultiConverter"/>

            <!-- Common Styles -->
            <Style x:Key="CardBorderStyle" TargetType="Border">
                <Setter Property="Background" Value="{StaticResource SurfaceBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="CornerRadius" Value="8"/>
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="6" 
                                          Direction="270" 
                                          ShadowDepth="1" 
                                          Color="{StaticResource ShadowColor}"
                                          Opacity="0.08"/>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="LightIconButtonStyle" TargetType="Button">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="{StaticResource TextSecondaryBrush}"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Padding" Value="8,4"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" 
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    CornerRadius="4">
                                <ContentPresenter HorizontalAlignment="Center" 
                                                  VerticalAlignment="Center" 
                                                  Margin="{TemplateBinding Padding}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{StaticResource HoverBrush}"/>
                                    <Setter Property="Foreground" Value="{StaticResource AccentBrush}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="{StaticResource AccentBrush}"/>
                                    <Setter Property="Foreground" Value="White"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Primary Button Style -->
            <Style x:Key="PrimaryButtonStyle" TargetType="Button">
                <Setter Property="Background" Value="{StaticResource AccentBrush}"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="BorderBrush" Value="{StaticResource AccentDarkBrush}"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Padding" Value="16,8"/>
                <Setter Property="MinHeight" Value="36"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="4">
                                <ContentPresenter HorizontalAlignment="Center" 
                                                  VerticalAlignment="Center" 
                                                  Margin="{TemplateBinding Padding}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{StaticResource AccentDarkBrush}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Background" Value="#CCCCCC"/>
                                    <Setter Property="Foreground" Value="#888888"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Secondary Button Style -->
            <Style x:Key="SecondaryButtonStyle" TargetType="Button">
                <Setter Property="Background" Value="{StaticResource SurfaceBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource TextSecondaryBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="16,8"/>
                <Setter Property="MinHeight" Value="36"/>
                <Setter Property="FontWeight" Value="Normal"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="4">
                                <ContentPresenter HorizontalAlignment="Center" 
                                                  VerticalAlignment="Center" 
                                                  Margin="{TemplateBinding Padding}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{StaticResource HoverBrush}"/>
                                    <Setter Property="Foreground" Value="{StaticResource AccentBrush}"/>
                                    <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Background" Value="#F5F5F5"/>
                                    <Setter Property="Foreground" Value="#AAAAAA"/>
                                    <Setter Property="BorderBrush" Value="#DDDDDD"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Toggle Button Style -->
            <Style x:Key="ModernToggleButtonStyle" TargetType="ToggleButton">
                <Setter Property="Background" Value="{StaticResource SurfaceBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource TextSecondaryBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="12,6"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="6">
                                <ContentPresenter HorizontalAlignment="Center" 
                                                VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Background" Value="{StaticResource AccentBrush}"/>
                                    <Setter Property="Foreground" Value="White"/>
                                    <Setter Property="BorderBrush" Value="{StaticResource AccentDarkBrush}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{StaticResource HoverBrush}"/>
                                    <Setter Property="Foreground" Value="{StaticResource AccentBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- DataGrid Style -->
            <Style x:Key="ModernDataGridStyle" TargetType="DataGrid">
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
                <Setter Property="Background" Value="{StaticResource SurfaceBrush}"/>
                <Setter Property="RowBackground" Value="{StaticResource SurfaceBrush}"/>
                <Setter Property="AlternatingRowBackground" Value="#F9FAFC"/>
                <Setter Property="HorizontalGridLinesBrush" Value="#F0F2F5"/>
                <Setter Property="VerticalGridLinesBrush" Value="Transparent"/>
                <Setter Property="HeadersVisibility" Value="Column"/>
                <Setter Property="RowHeight" Value="48"/>
                <Setter Property="Foreground" Value="{StaticResource TextSecondaryBrush}"/>
            </Style>

            <!-- View DataTemplates -->
            <DataTemplate DataType="{x:Type vm:DashboardViewModel}">
                <views:DashboardView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:ProductViewModel}">
                <views:ProductView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:CategoryViewModel}">
                <views:CategoryView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:CustomerViewModel}">
                <views:CustomerView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:SettingsViewModel}">
                <views:SettingsView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:SupplierViewModel}">
                <views:SupplierView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:TransactionHistoryViewModel}">
                <views:TransactionHistoryView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:ProfitViewModel}">
                <views:ProfitView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:ExpenseViewModel}">
                <views:ExpenseView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:DrawerViewModel}">
                <views:DrawerView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:EmployeeViewModel}">
                <views:EmployeeView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:QuoteViewModel}">
                <views:QuoteView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:LowStockHistoryViewModel}">
                <views:LowStockHistoryView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:TableManagementViewModel}">
                <views:TableManagementView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:MainStockViewModel}">
                <views:MainStockView/>
            </DataTemplate>
        </ResourceDictionary>
    </Application.Resources>
</Application>